left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000)
table(places$muniname %>% is.na())
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2018) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
places <- places %>%
mutate(cty_fips = as.numeric(str_c(STATEFP,COUNTYFP)),
STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP)) %>%
merge(county_cz_xwalk, by = 'cty_fips', all.x = TRUE) %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000)
table(places$muniname %>% is.na())
st_write(places,paste0(CLEANDATA,"other/municipal_shapefile.shp"), layer = "munis")
y <- as.numeric(places$GEOID)
x <- as.numeric(str_c(munis$STATEFP,munis$PLACEFP))
table(x %in% y)
?write_dta
library(tidyverse)
library(sf)
library(haven)
library(tigris)
library(stringr)
library(readxl)
library(terra)
RAWDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/raw/"
INTDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/interim/"
CLEANDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/clean/"
XWALKS <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/xwalks/"
#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"cog_ID_fips_place_xwalk_02.dta")) %>%
select(fips_state, fips_county_2002, fips_place_2002) %>%
rename(STATEFP = fips_state, COUNTYFP = fips_county_2002, PLACEFP = fips_place_2002)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
WRLURI <- read_stata(paste0(RAWDATA,"other/WHARTONLANDREGULATIONDATA_1_15_2020/WRLURI_01_15_2020.dta")) %>%
filter(str_length(GEOID)==7) %>% # Keeping only census designated places
mutate(PLACEFP = fipsplacecode18, STATEFP = statecode) %>%
select(PLACEFP, STATEFP,LPPI18,SPII18,LPAI18,LZAI18,SRI18,DRI18,
EI18,AHI18,ADI18,WRLURI18,weight_full,weight_metro,
totinitiatives18,appr_rate18, communityname18) %>%
mutate(PLACEFP = case_when((PLACEFP == 11390) ~ 11397, # Butte-Silver Bow to Butte-Silver Bow (balance)
(PLACEFP == 60915 ~ 60900), # Princeton to Princeton
TRUE ~ PLACEFP))
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2018) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
places <- places %>%
mutate(cty_fips = as.numeric(str_c(STATEFP,COUNTYFP)),
STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP)) %>%
merge(county_cz_xwalk, by = 'cty_fips', all.x = TRUE) %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000)
st_write(places,paste0(CLEANDATA,"other/municipal_shapefile.shp"), layer = "munis")
# Also save attributes without shapefile for ease of use
places %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"municipal_shapefile_attributes.dta"), version = 17)
# Also save attributes without shapefile for ease of use
places %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"municipal_shapefile_attributes.dta"))
# Also save attributes without shapefile for ease of use
places %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"other/municipal_shapefile_attributes.dta"))
library(tidyverse)
library(sf)
library(haven)
library(tigris)
library(stringr)
library(readxl)
library(terra)
RAWDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/raw/"
INTDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/interim/"
CLEANDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/clean/"
XWALKS <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/xwalks/"
#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"cog_ID_fips_place_xwalk_02.dta")) %>%
select(fips_state, fips_county_2002, fips_place_2002) %>%
rename(STATEFP = fips_state, COUNTYFP = fips_county_2002, PLACEFP = fips_place_2002)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
WRLURI <- read_stata(paste0(RAWDATA,"other/WHARTONLANDREGULATIONDATA_1_15_2020/WRLURI_01_15_2020.dta")) %>%
filter(str_length(GEOID)==7) %>% # Keeping only census designated places
mutate(PLACEFP = fipsplacecode18, STATEFP = statecode) %>%
select(PLACEFP, STATEFP,LPPI18,SPII18,LPAI18,LZAI18,SRI18,DRI18,
EI18,AHI18,ADI18,WRLURI18,weight_full,weight_metro,
totinitiatives18,appr_rate18, communityname18) %>%
mutate(PLACEFP = case_when((PLACEFP == 11390) ~ 11397, # Butte-Silver Bow to Butte-Silver Bow (balance)
(PLACEFP == 60915 ~ 60900), # Princeton to Princeton
TRUE ~ PLACEFP))
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2018) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
places <- places %>%
mutate(cty_fips = as.numeric(str_c(STATEFP,COUNTYFP)),
STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP)) %>%
merge(county_cz_xwalk, by = 'cty_fips', all.x = TRUE) %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000)
st_write(places,paste0(CLEANDATA,"other/municipal_shapefile.shp"), layer = "munis")
# Also save attributes without shapefile for ease of use
places %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"other/municipal_shapefile_attributes.dta"))
table(fips_place_xwalk$STATEFP)
View(places)
table(places$STATEFP)
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2018) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
library(tidyverse)
library(sf)
library(haven)
library(tigris)
library(stringr)
library(readxl)
library(terra)
RAWDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/raw/"
INTDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/interim/"
CLEANDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/clean/"
XWALKS <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/xwalks/"
#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"cog_ID_fips_place_xwalk_02.dta")) %>%
select(fips_state, fips_county_2002, fips_place_2002) %>%
rename(STATEFP = fips_state, COUNTYFP = fips_county_2002, PLACEFP = fips_place_2002)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
WRLURI <- read_stata(paste0(RAWDATA,"other/WHARTONLANDREGULATIONDATA_1_15_2020/WRLURI_01_15_2020.dta")) %>%
filter(str_length(GEOID)==7) %>% # Keeping only census designated places
mutate(PLACEFP = fipsplacecode18, STATEFP = statecode) %>%
select(PLACEFP, STATEFP,LPPI18,SPII18,LPAI18,LZAI18,SRI18,DRI18,
EI18,AHI18,ADI18,WRLURI18,weight_full,weight_metro,
totinitiatives18,appr_rate18, communityname18) %>%
mutate(PLACEFP = case_when((PLACEFP == 11390) ~ 11397, # Butte-Silver Bow to Butte-Silver Bow (balance)
(PLACEFP == 60915 ~ 60900), # Princeton to Princeton
TRUE ~ PLACEFP))
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2018) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
places <- places %>%
mutate(cty_fips = as.numeric(str_c(STATEFP,COUNTYFP)),
STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP)) %>%
merge(county_cz_xwalk, by = 'cty_fips', all.x = TRUE) %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15))
st_write(places,paste0(CLEANDATA,"other/municipal_shapefile.shp"), layer = "munis")
# Also save attributes without shapefile for ease of use
places %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"other/municipal_shapefile_attributes.dta"))
table(places$south, useNA = 'always')
table(places$STATEFP[places$south==1], useNA = 'always')
## Load dependencies, install if not already.
packages <-
c('tidyverse',
'sf',
'haven',
'tigris',
'stringr',
'readxl',
'terra')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
# Get paths
paths <- read.csv("../../paths.csv")
RAWDATA <- paths[paths$global == "RAWDATA",2]
INTDATA <- paths[paths$global == "INTDATA",2]
CLEANDATA <- paths[paths$global == "CLEANDATA",2]
XWALKS <- paths[paths$global == "XWALKS",2]
#### Geographies ----
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile.shp"))
maxcity <- read_dta(paste0(INTDATA,"/census/maxcitypop.dta"))
# Get paths
paths <- read.csv("../../paths.csv")
RAWDATA <- paths[paths$global == "RAWDATA",2]
INTDATA <- paths[paths$global == "INTDATA",2]
CLEANDATA <- paths[paths$global == "CLEANDATA",2]
XWALKS <- paths[paths$global == "XWALKS",2]
#### Geographies ----
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile.shp"))
maxcity <- read_dta(paste0(INTDATA,"/census/maxcitypop.dta"))
View(munis)
length(unique(munis$cz))
View(maxcity)
df <- munis %>%
inner_join(maxcity, by = 'cz')
View(df)
length(unique(df$cz))
View(maxcity)
maxcity <- read_dta(paste0(INTDATA,"/census/maxcitypop.dta"))
df2 <- munis %>%
inner_join(maxcity, by = 'cz')
#### Geographies ----
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile.shp"))
maxcity <- read_dta(paste0(INTDATA,"/census/maxcitypop.dta")) %>%
rename(GEOID_max = GEOID) %>%
select(-cz_name)
df <- munis %>%
inner_join(maxcity, by = 'cz')
View(df)
plot(df$geometry[df$cz==35100])
st_crs(df)
df$geometry[df$cz==35100]
plot(df$geometry[df$cz==35100])
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(principal_city = GEOID == GEOID_max,
pre_1940 = yr_incorp <= 1940)
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(principal_city = GEOID == GEOID_max,
pre_1940 = yr_ncorp <= 1940)
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(principal_city = GEOID == GEOID_max,
pre_1940 = yr_ncrp <= 1940)
plot(df$geometry[df$cz==35100], color = df$principal_city[df$cz == 35100])
plot(df$geometry[df$cz==35100], col = df$principal_city[df$cz == 35100])
?plot
ggplot(df$geometry[df$cz==35100])
ggplot(df$geometry[df$cz==35100]) +
geom_sf()
?geom_sf
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(legend =  case_when((GEOID == GEOID_max) ~ 2, # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ 1), # Princeton to Princeton
TRUE ~ 0))
df[df$cz==35100,]
ggplot() +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = legend))
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940"))
plot(df$geometry[df$cz==35100], col = df$principal_city[df$cz == 35100])
ggplot() +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = legend))
ggplot() +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = legend))+
coord_sf()
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940"))
ggplot() +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))+
ggplot() +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))
unique(df$cz)
for (cz in unique(df$cz)){
print(cz)
}
ggplot() +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))+
title("test")
ggplot() +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))+
ggtitle("test")
View(paths)
df$cz_name%>%
str_replace(",","") %>%
str_replace(".","") %>%
str_replace(" ","_")
df$cz_name %>%
str_replace(",","")
df$cz_name %>%
str_replace(",","") %>%
str_replace(".","")
df$cz_name %>%
str_replace(",","") %>%
str_replace("\.","")
df$cz_name %>%
str_replace(",","") %>%
str_replace("/.","")
unique(df$cz_name) %>%
str_replace(",","") %>%
str_replace("/.","") %>%
str_replace(" ","_")
?str_replace_all
unique(df$cz_name) %>%
str_replace_all(",","") %>%
str_replace_all("\\.","") %>%
str_replace_all(" ","_") %>%
str_replace_all("-","_")
unique(df$cz_name) %>%
str_replace_all(",","") %>%
str_replace_all("\\.","") %>%
str_replace_all(" ","_") %>%
str_replace_all("-","_") %>%
str_to_lower()
?ggsave
for (cz in unique(df$cz)){
cz_name <- df$cz_name[df$cz == cz]
path_name <- cz_name %>%
str_replace_all(",","") %>%
str_replace_all("\\.","") %>%
str_replace_all(" ","_") %>%
str_replace_all("-","_") %>%
str_to_lower()
cz_plot <- ggplot() +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))
ggtitle(cz_name)
ggsave(paste0(FIGS,"/circled_czs/",path_name,".pdf"), plot = cz_plot)
}
FIGS <- paths[paths$global == "FIGS",2]
for (cz in unique(df$cz)){
cz_name <- df$cz_name[df$cz == cz]
path_name <- cz_name %>%
str_replace_all(",","") %>%
str_replace_all("\\.","") %>%
str_replace_all(" ","_") %>%
str_replace_all("-","_") %>%
str_to_lower()
cz_plot <- ggplot() +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))
ggtitle(cz_name)
ggsave(paste0(FIGS,"/circled_czs/",path_name,".pdf"), plot = cz_plot)
}
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated"))
for (cz in unique(df$cz)){
cz_name <- df$cz_name[df$cz == cz]
path_name <- cz_name %>%
str_replace_all(",","") %>%
str_replace_all("\\.","") %>%
str_replace_all(" ","_") %>%
str_replace_all("-","_") %>%
str_to_lower()
cz_plot <- ggplot() +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))
ggtitle(cz_name)
ggsave(paste0(FIGS,"/circled_czs/",path_name,".pdf"), plot = cz_plot)
}
warnings()
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated"))
for (cz in unique(df$cz)){
cz_name <- df$cz_name[df$cz == cz]
path_name <- cz_name %>%
str_replace_all(",","") %>%
str_replace_all("\\.","") %>%
str_replace_all(" ","_") %>%
str_replace_all("-","_") %>%
str_to_lower()
cz_plot <- ggplot() +
geom_sf(data = df[df$cz==cz,], mapping = aes(fill = Legend))
ggtitle(cz_name)
ggsave(paste0(FIGS,"/circled_czs/",path_name,".png"), plot = cz_plot)
}
for (cz in unique(df$cz)){
cz_name <- df$cz_name[df$cz == cz]
path_name <- cz_name %>%
str_replace_all(",","") %>%
str_replace_all("\\.","") %>%
str_replace_all(" ","_") %>%
str_replace_all("-","_") %>%
str_to_lower()
cz_plot <- ggplot() +
geom_sf(data = df[df$cz==cz,], mapping = aes(fill = Legend))
ggtitle(cz_name)
ggsave(paste0(FIGS,"/circled_czs/",path_name,".png"), scale = 4, plot = cz_plot)
}
#### Geographies ----
czs <- st_read(paste0(RAWDATA,"/shapefiles/cz1990_shapefile/cz1990.shp"))
View(czs)
ggplot() +
geom_sf(data = czs[czs$cz==35100,]) +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))+
ggtitle("test")
?geom_sf
ggplot() +
geom_sf(data = czs[czs$cz==35100,]) +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))+
ggtitle("test")
geom_sf(data = czs[czs$cz==35100,],color=alpha("red",0.2) +
ggplot() +
geom_sf(data = czs[czs$cz==35100,],color=alpha("red",0.2)) +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))+
ggtitle("test")
ggplot() +
geom_sf(data = czs[czs$cz==35100,],color=alpha("red",0.2), fill = 0) +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))+
ggtitle("test")
ggplot() +
geom_sf(data = czs[czs$cz==35100,],fill=alpha("red",0.2)) +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))+
ggtitle("test")
ggplot() +
geom_sf(data = czs[czs$cz==35100,],fill=alpha("white",0.2)) +
geom_sf(data = df[df$cz==35100,], mapping = aes(fill = Legend))+
ggtitle("test")
for (cz in unique(df$cz)){
cz_name <- df$cz_name[df$cz == cz]
path_name <- cz_name %>%
str_replace_all(",","") %>%
str_replace_all("\\.","") %>%
str_replace_all(" ","_") %>%
str_replace_all("-","_") %>%
str_to_lower()
cz_plot <- ggplot() +
geom_sf(data = czs[czs$cz==cz,],fill=alpha("white",0.2)) +
geom_sf(data = df[df$cz==cz,], mapping = aes(fill = Legend)) +
ggtitle(cz_name)
ggsave(paste0(FIGS,"/circled_czs/",path_name,".png"), scale = 4, plot = cz_plot)
}
## Load dependencies, install if not already.
packages <-
c('tidyverse',
'sf',
'haven',
'tigris',
'stringr',
'readxl')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
# Get paths
paths <- read.csv("../paths.csv")
getwd()
setwd(..)
setwd("..")
#### Network costs ----
cost_id_county <-  read_excel(paste0(RAWDATA,"/covariates/RR_NetworkDatabase_DH_Oct2015/Data/Transportation_Costs_AllDecades/Cost_ID_county.xlsx")) %>%
select(`gis id`, ICPSRFIP) %>%
rename(cty_fips = ICPSRFIP, gisid= `gis id`)
# Get paths
paths <- read.csv("../paths.csv")
RAWDATA <- paths[paths$global == "RAWDATA",2]
INTDATA <- paths[paths$global == "INTDATA",2]
XWALKS <- paths[paths$global == "XWALKS",2]
# Get paths
paths <- read.csv("../paths.csv")
RAWDATA <- paths[paths$global == "RAWDATA",2]
INTDATA <- paths[paths$global == "INTDATA",2]
XWALKS <- paths[paths$global == "XWALKS",2]
#### Network costs ----
cost_id_county <-  read_excel(paste0(RAWDATA,"/covariates/RR_NetworkDatabase_DH_Oct2015/Data/Transportation_Costs_AllDecades/Cost_ID_county.xlsx")) %>%
select(`gis id`, ICPSRFIP) %>%
rename(cty_fips = ICPSRFIP, gisid= `gis id`)
