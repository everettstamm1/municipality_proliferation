munis$cz[munis$GEOID == '3011397']
munis$cz[munis$GEOID == '2148006']
munis$cz[munis$GEOID_max == '2148006']
'2148006' %in% munis$GEOID
sum(munis$GEOID == '2148006')
table(munis$FUNCSTA[munis$GEOID=='3011397'])
table(munis$FUNCSTA[munis$GEOID=='2148006'])
table(munis$NAMELSA[munis$GEOID=='3011397'])
table(df$FUNCSTA[df$GEOID == df$GEOID_max])
table(df$FUNCSTA)
View(df)
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
mutate(COUNTYFP = if_else(is.na(COUNTYFP),COUNTYFP_xwalk,COUNTYFP)) %>%
mutate(cty_fips = 1000*STATEFP+COUNTYFP) %>%
select(-COUNTYFP_xwalk) %>%
left_join(county_cz_xwalk, by = 'cty_fips')
View(out)
colnames(out)
table(out$czone[out$GEOID == '3011397'])
table(out$czone[out$GEOID == '2148006'])
table(munis$cz[munis$GEOID == '3011397'])
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
mutate(COUNTYFP = if_else(is.na(COUNTYFP),COUNTYFP_xwalk,COUNTYFP)) %>%
mutate(cty_fips = 1000*STATEFP+COUNTYFP) %>%
select(-COUNTYFP_xwalk) %>%
left_join(county_cz_xwalk, by = 'cty_fips') %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz')
table(out$czone[out$GEOID == '3011397'])
View(sample_czs)
out2 <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
mutate(COUNTYFP = if_else(is.na(COUNTYFP),COUNTYFP_xwalk,COUNTYFP)) %>%
mutate(cty_fips = 1000*STATEFP+COUNTYFP) %>%
select(-COUNTYFP_xwalk) %>%
left_join(county_cz_xwalk, by = 'cty_fips') %>%
rename(cz = czone)
table(out2$cz[out2$GEOID == '3011397'])
sample_czs[[c('cz','sample_130_czs'),]]
sample_czs[c('cz','sample_130_czs'),]
sample_czs[c('cz','sample_130_czs')]
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
mutate(COUNTYFP = if_else(is.na(COUNTYFP),COUNTYFP_xwalk,COUNTYFP)) %>%
mutate(cty_fips = 1000*STATEFP+COUNTYFP) %>%
select(-COUNTYFP_xwalk) %>%
left_join(county_cz_xwalk, by = 'cty_fips') %>%
rename(cz = czone) %>%
left_join(sample_czs[c('cz','sample_130_czs')], by = 'cz')
table(out2$cz[out2$GEOID == '3011397'])
table(out$cz[out2$GEOID == '3011397'])
table(out$cz[out2$GEOID == '2148006'])
table(out$cz[out$GEOID == '2148006'])
table(out$cz[out$GEOID == '3011397'])
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
mutate(COUNTYFP = if_else(is.na(COUNTYFP),COUNTYFP_xwalk,COUNTYFP)) %>%
mutate(cty_fips = 1000*STATEFP+COUNTYFP) %>%
select(-COUNTYFP_xwalk) %>%
left_join(county_cz_xwalk, by = 'cty_fips') %>%
rename(cz = czone) %>%
left_join(sample_czs[c('cz','sample_130_czs')], by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(population, by = c('STATEFP','PLACEFP'))
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile.shp"))
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
mutate(COUNTYFP = if_else(is.na(COUNTYFP),COUNTYFP_xwalk,COUNTYFP)) %>%
mutate(cty_fips = 1000*STATEFP+COUNTYFP) %>%
select(-COUNTYFP_xwalk) %>%
left_join(county_cz_xwalk, by = 'cty_fips') %>%
rename(cz = czone) %>%
left_join(sample_czs[c('cz','sample_130_czs')], by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(population, by = c('STATEFP','PLACEFP'))
table(munis$cz[munis$GEOID == '2148006'])
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile.shp"), layer = "munis")
# Also save attributes without shapefile for ease of use
out %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"/other/municipal_shapefile_attributes.dta"))
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile.shp"))
sf_use_s2(TRUE)
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile.shp"), layer = "munis")
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile.shp"))
?st_write
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile.shp"), append = F)
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile"))
st_drivers()
View(munis)
## Load dependencies, install if not already.
packages <-
c('tidyverse',
'sf',
'haven',
'tigris',
'stringr',
'readxl',
'terra')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
# Get paths
paths <- read.csv("../paths.csv")
CLEANDATA <- paths[paths$global == "CLEANDATA",2]
# Get paths
paths <- read.csv("../../paths.csv")
CLEANDATA <- paths[paths$global == "CLEANDATA",2]
RAWDATA <- paths[paths$global == "RAWDATA",2]
INTDATA <- paths[paths$global == "INTDATA",2]
XWALKS <- paths[paths$global == "XWALKS",2]
#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"/cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"/dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"/place_county_xwalk.dta")) %>%
rename(STATEFP = statefp, PLACEFP = placefp, COUNTYFP_xwalk = countyfp) %>%
select(STATEFP, PLACEFP, COUNTYFP_xwalk)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
WRLURI <- read_stata(paste0(RAWDATA,"/other/WHARTONLANDREGULATIONDATA_1_15_2020/WRLURI_01_15_2020.dta")) %>%
filter(str_length(GEOID)==7) %>% # Keeping only census designated places
mutate(PLACEFP = fipsplacecode18, STATEFP = statecode) %>%
select(PLACEFP, STATEFP,LPPI18,SPII18,LPAI18,LZAI18,SRI18,DRI18,
EI18,AHI18,ADI18,WRLURI18,weight_full,weight_metro,
totinitiatives18,appr_rate18, communityname18) %>%
mutate(PLACEFP = case_when((PLACEFP == 11390) ~ 11397, # Butte-Silver Bow to Butte-Silver Bow (balance)
(PLACEFP == 60915 ~ 60900), # Princeton to Princeton
TRUE ~ PLACEFP))
corelogic <- read.csv(paste0(CLEANDATA,"/corelogic/censusplace_clogic_chars.csv")) %>%
rename(NAME_corelogic = NAME)
population <- read.csv(paste0(RAWDATA,"/census/nhgis0025_csv/nhgis0025_csv/nhgis0025_ds258_2020_place.csv")) %>%
select(STATEA, PLACEA, U7H001) %>%
rename(STATEFP = STATEA, PLACEFP = PLACEA, population = U7H001)
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
mutate(COUNTYFP = if_else(is.na(COUNTYFP),COUNTYFP_xwalk,COUNTYFP)) %>%
mutate(cty_fips = 1000*STATEFP+COUNTYFP) %>%
select(-COUNTYFP_xwalk) %>%
left_join(county_cz_xwalk, by = 'cty_fips') %>%
rename(cz = czone) %>%
left_join(sample_czs[c('cz','sample_130_czs')], by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(population, by = c('STATEFP','PLACEFP'))
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile.shp"))
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile.shp"), layer = 'munis')
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"), layer = 'munis')
# Also save attributes without shapefile for ease of use
out %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"/other/municipal_shapefile_attributes.dta"))
## Load dependencies, install if not already.
packages <-
c('tidyverse',
'sf',
'haven',
'tigris',
'stringr',
'readxl',
'terra')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
# Get paths
paths <- read.csv("../../paths.csv")
RAWDATA <- paths[paths$global == "RAWDATA",2]
INTDATA <- paths[paths$global == "INTDATA",2]
CLEANDATA <- paths[paths$global == "CLEANDATA",2]
FIGS <- paths[paths$global == "FIGS",2]
XWALKS <- paths[paths$global == "XWALKS",2]
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"))
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile/munis.shp"))
crs <- st_crs(munis) # NAD 83
czs <- st_read(paste0(RAWDATA,"/shapefiles/cz1990_shapefile/cz1990.shp")) %>%
st_transform(crs)
maxcity <- read_dta(paste0(INTDATA,"/census/maxcitypop.dta")) %>%
rename(GEOID_max = GEOID) %>%
dplyr::select(c(cz,maxcitypop,totfrac_in_main_city,GEOID_max))
lakes <- st_read(paste0(RAWDATA,"/shapefiles/Lakes_and_Rivers_Shapefile_NA_Lakes_and_Rivers_data_hydrography_p_lakes_v2/Lakes_and_Rivers_Shapefile/NA_Lakes_and_Rivers/data/hydrography_p_lakes_v2.shp")) %>%
st_transform(crs)
land <- st_read(paste0(RAWDATA,"/shapefiles/USA_Federal_Lands/USA_Federal_Lands.shp")) %>%
st_transform(crs)
water <- st_read(paste0(RAWDATA,"/shapefiles/USA_Detailed_Water_Bodies/USA_Detailed_Water_Bodies.shp")) %>%
st_transform(crs) %>%
filter(!(FTYPE %in% c('Canal/Ditch','Stream/River')))
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz))
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz))
x <- df[df$GEOID == df$GEOID_max,]
x <- df[!(df$cz %in% x$cz),]
x$cz
unique(x$cz)
x$GEOID_max
unique(df$STATEFP)
unique(df$cz)
unique(df$cz) %>% length()
x <- df[df$GEOID == df$GEOID_max,]
y <- out[!(out$cz %in% x$cz),]
x <- df[df$GEOID == df$GEOID_max,]
unique(x$cz) %>% length()
# Get paths
paths <- read.csv("../../paths.csv")
RAWDATA <- paths[paths$global == "RAWDATA",2]
INTDATA <- paths[paths$global == "INTDATA",2]
CLEANDATA <- paths[paths$global == "CLEANDATA",2]
FIGS <- paths[paths$global == "FIGS",2]
XWALKS <- paths[paths$global == "XWALKS",2]
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile/munis.shp"))
crs <- st_crs(munis) # NAD 83
czs <- st_read(paste0(RAWDATA,"/shapefiles/cz1990_shapefile/cz1990.shp")) %>%
st_transform(crs)
maxcity <- read_dta(paste0(INTDATA,"/census/maxcitypop.dta")) %>%
rename(GEOID_max = GEOID) %>%
dplyr::select(c(cz,maxcitypop,totfrac_in_main_city,GEOID_max))
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz))
unique(munis$cz) %>% length()
unique(df$cz) %>% length()
unique(munis$cz[munis$GEOID == '38300']) %>% length()
x <- df[df$GEOID == df$GEOID_max,]
y <- out[!(out$cz %in% x$cz),]
y <- df[!(df$cz %in% x$cz),]
y$cz %>% unique()
View(df)
View(y)
z <- y %>% select(cz,cz_name,GEOID,GEOID_max, NAME, NAMELSA)
z <- y %>% select(cz,GEOID,GEOID_max, NAME, NAMELSA)
View(z)
y$Legend %>% table()
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(GEOID_max = as.numeric(GEOID_max)) %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz))
x <- df[df$GEOID == df$GEOID_max,]
y <- df[!(df$cz %in% x$cz),]
df[df$GEOID == df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"))
df[df$GEOID == df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = 'FALSE')
df[df$GEOID == df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
filter(yr_ncrp <= 1940) %>%
st_write(paste0(CLEANDATA,"/other/other_munis.shp"), append = FALSE)
plot(df$geometry[df$cz == 13900])
munis$cz[1]
munis$cz_name[1]
munis$cz_name[munis$cz == 16200]
View(maxcity)
sample_czs <- read_dta(paste0(INTDATA,"/dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
View(sample_czs)
## Load dependencies, install if not already.
packages <-
c('tidyverse',
'sf',
'haven',
'tigris',
'stringr',
'readxl',
'terra')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
# Get paths
paths <- read.csv("../../paths.csv")
RAWDATA <- paths[paths$global == "RAWDATA",2]
INTDATA <- paths[paths$global == "INTDATA",2]
CLEANDATA <- paths[paths$global == "CLEANDATA",2]
FIGS <- paths[paths$global == "FIGS",2]
XWALKS <- paths[paths$global == "XWALKS",2]
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile/munis.shp"))
crs <- st_crs(munis) # NAD 83
schools <- read.csv(paste0(RAWDATA,"/nces/school-districts_lea_directory.csv"))
schools_shp <- st_as_sf(schools, coords = c("longitude", "latitude"), crs = crs)
schools <- read.csv(paste0(RAWDATA,"/nces/school-districts_lea_directory.csv")) %>%
select(!is.na(longitude) & !is.na(latitude))
View(schools)
schools <- read.csv(paste0(RAWDATA,"/nces/school-districts_lea_directory.csv")) %>%
filter(!is.na(longitude) & !is.na(latitude)) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = crs)
matched_data <- st_join(schools, munis, join = st_within)
View(matched_data)
output <- matched_data %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP, GEOID,LEAID, cty_fps, cz)
output <- matched_data %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP, GEOID,leaid, cty_fps, cz)
write_dta(output,path=paste0(XWALKS,"/leaid_place_xwalk.dta"))
length(unique(output$leaid))
length(unique(schools$leaid))
output <- matched_data %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP, GEOID,leaid, cty_fps, cz) %>%
filter(!is.na(leaid))
View(output)
View(matched_data)
plot(schools$geometry)
?st_join
matched_data <- st_join(munis, schools, join = st_within)
View(matched_data)
matched_data <- st_join(munis, schools, join = st_intersects)
View(matched_data)
output <- matched_data %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP, GEOID,leaid, cty_fps, cz) %>%
filter(!is.na(leaid))
View(output)
View(matched_data)
st_geometry(munis)
matched_data <- st_join(munis, schools, join = st_within)
matched_data <- st_join(schools, munis, join = st_within, left = True)
matched_data <- st_join(schools, munis, join = st_within, left = TRUE)
plot(matched_data$geometry)
output <- matched_data %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP, GEOID,leaid, cty_fps, cz) %>%
filter(!is.na(leaid))
View(output)
output <- matched_data %>%
group_by(leaid) %>%
slice(which.min(st_distance(schools, munis, by_element = TRUE))) %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP, GEOID,leaid, cty_fps, cz) %>%
filter(!is.na(leaid))
matched_data <- st_contains(munis, schools)
View(matched_data)
plot(munis[1:50,])
plot(munis$geometry[1:50,])
plot(munis$geometry[1:50])
plot(munis$geometry[1])
plot(schools$geometry, color = 'red', add = T)
View(munis)
plot(munis$geometry[98:99])
plot(schools$geometry, color = 'red', add = T)
st_geometry(schools)
View(matched_data)
View(output)
length(unique(c(output$GEOID, output$leaid)))
View(schools)
length(unique(schools$leaid))
matched_data <- st_join(schools, munis, join = st_within)
output <- matched_data %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP, GEOID,leaid, cty_fps, cz) %>%
filter(!is.na(leaid)))
output <- matched_data %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP, GEOID,leaid, cty_fps, cz) %>%
filter(!is.na(leaid))
View(output)
View(schools)
schools <- read.csv(paste0(RAWDATA,"/nces/school-districts_lea_directory.csv")) %>%
filter(!is.na(longitude) & !is.na(latitude) & year == 2017) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = crs)
matched_data <- st_join(schools, munis, join = st_within)
output <- matched_data %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP, GEOID,leaid, cty_fps, cz) %>%
filter(!is.na(leaid))
View(output)
length(unique(output$leaid))
length(unique(c(output$leaid,output$GEOID)))
length(unique(output['leaid','GEOID'])))
length(unique(output['leaid','GEOID']))
length(unique(output['leaid','GEOID',]))
length(unique(output[c('leaid','GEOID')]))
length(unique(output[c('leaid','GEOID'),]))
output <- matched_data %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP,leaid) %>%
filter(!is.na(leaid) & !is.na(PLACEFP))
View(output)
output <- matched_data %>%
st_drop_geometry() %>%
select(PLACEFP, STATEFP,leaid) %>%
filter(!is.na(leaid) & !is.na(PLACEFP)) %>%
distinct()
output$leaid %>% unique() %>% length()
write_dta(output,path=paste0(XWALKS,"/leaid_place_xwalk.dta"))
