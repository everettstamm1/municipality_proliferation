packages <-
c('tidyverse',
'rvest',
'httr',
'readxl',
'xml2',
"RSelenium",
'wdman')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
rD <- rsDriver(browser = "chrome", chromever = "latest")
## Load dependencies, install if not already.
packages <-
c('tidyverse',
'rvest',
'httr',
'readxl',
'xml2',
"RSelenium",
'wdman')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
rD <- rsDriver(browser = "chrome", chromever = "latest")
## Load dependencies, install if not already.
packages <-
c('tidyverse',
'rvest',
'httr',
'readxl',
'xml2',
"RSelenium",
'wdman')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
rD <- rsDriver(browser = "chrome", chromever = "latest")
## Load dependencies, install if not already.
packages <-
c('tidyverse',
'sf',
'haven',
'tigris',
'stringr',
'readxl',
'terra')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
# Get paths
paths <- read.csv("../../paths.csv")
getwd()
## Load dependencies, install if not already.
packages <-
c('tidyverse',
'sf',
'haven',
'tigris',
'stringr',
'readxl',
'terra')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
# Get paths
paths <- read.csv("../../paths.csv")
setwd(..)
setwd("../..")
getwd()
setwd("documents")
setwd("Github")
setwd("municipality_proliferation")
setwd("code")
setwd("analysis")
# Get paths
paths <- read.csv("../../paths.csv")
RAWDATA <- paths[paths$global == "RAWDATA",2]
INTDATA <- paths[paths$global == "INTDATA",2]
CLEANDATA <- paths[paths$global == "CLEANDATA",2]
FIGS <- paths[paths$global == "FIGS",2]
XWALKS <- paths[paths$global == "XWALKS",2]
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"))
crs <- st_crs(munis) # NAD 83
czs <- st_read(paste0(RAWDATA,"/shapefiles/cz1990_shapefile/cz1990.shp")) %>%
st_transform(crs)
maxcity <- read_dta(paste0(INTDATA,"/census/maxcitypop.dta")) %>%
rename(GEOID_max = GEOID) %>%
dplyr::select(c(cz,maxcitypop,totfrac_in_main_city,GEOID_max))
lakes <- st_read(paste0(RAWDATA,"/shapefiles/Lakes_and_Rivers_Shapefile_NA_Lakes_and_Rivers_data_hydrography_p_lakes_v2/Lakes_and_Rivers_Shapefile/NA_Lakes_and_Rivers/data/hydrography_p_lakes_v2.shp")) %>%
st_transform(crs)
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(GEOID_max = as.numeric(GEOID_max)) %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz))
View(maxcity)
View(munis)
df$cz_name
df$GEOID == df$GEOID_max %>% sum()
sum(df$GEOID == df$GEOID_max)
sum(df$GEOID == df$GEOID_max, na.rm = T)
sum(df$GEOID != df$GEOID_max)
sum(is.na(df$GEOID))
sum(is.na(df$GEOID_max))
x <- df %>%
filter(is.na(GEOID))
View(x)
x$Legend
View(df)
mod(4234,10000)
4234 % 1000
4234 %% 1000
4234 %% 10000
min(df$PLACEFP)
min(df$PLACEFP/10000)
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(GEOID_max = as.numeric(GEOID_max)) %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz)) %>%
replace(GEOID = if_else(is.na(GEOID), 100000*STATEFP + PLACEFP, GEOID))
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(GEOID_max = as.numeric(GEOID_max)) %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz)) %>%
mutate(GEOID = if_else(is.na(GEOID), (100000*STATEFP + PLACEFP), GEOID))
x <- df %>%
filter(is.na(GEOID))
x <- st_read(paste0(CLEANDATA,"/other/main_munis.shp"))
y <- df[df$GEOID == df$GEOID_max,]
y <- df[df$GEOID != df$GEOID_max,]
x <- st_read(paste0(CLEANDATA,"/other/other_munis.shp"))
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(GEOID_max = as.numeric(GEOID_max)) %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz))
y <- df[df$GEOID != df$GEOID_max,]
View(x)
View(y)
y <- df[df$GEOID != df$GEOID_max,] %>% filter(yr_ncrp <= 1940)
df %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = FALSE)
df %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = FALSE)
df[df$GEOID == df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = FALSE)
x <- df[df$GEOID == df$GEOID_max,]
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(GEOID_max = as.numeric(GEOID_max)) %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz)) %>%
mutate(GEOID = if_else(is.na(GEOID), (100000*STATEFP + PLACEFP), GEOID))
x <- df %>%
df[df$GEOID == df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
filter(yr_ncrp <= 1940) %>%
st_write(paste0(CLEANDATA,"/other/other_munis.shp"), append = FALSE)
x <- df %>%
df[df$GEOID == df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = FALSE)
df[df$GEOID == df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
select(-lnd_sq_) %>%
st_write(paste0(CLEANDATA,"/other/all_other_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
select(-lnd_sq_) %>%
filter(yr_ncrp <= 1970 & yr_ncrp >= 1940) %>%
st_write(paste0(CLEANDATA,"/other/other_194070_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
filter(yr_ncrp < 1940) %>%
st_write(paste0(CLEANDATA,"/other/other_munis.shp"), append = FALSE)
x <- df[df$GEOID != df$GEOID_max,]
x <- df[df$GEOID != df$GEOID_max,] %>%
group_by(GEOID_max) %>%
summarise(count = n())
summary(x$count)
length(unique(munis$GEOID))
length(is.na(munis$GEOID))
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s) %>%
full_join(munis[munis$STATEFP == s,], by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
mutate(COUNTYFP = if_else(is.na(COUNTYFP),COUNTYFP_xwalk,COUNTYFP)) %>%
mutate(cty_fips = 1000*STATEFP+COUNTYFP) %>%
select(-COUNTYFP_xwalk) %>%
left_join(county_cz_xwalk, by = 'cty_fips') %>%
rename(cz = czone) %>%
left_join(sample_czs[c('cz','sample_130_czs')], by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(population, by = c('STATEFP','PLACEFP'))
#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"/cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"/dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"/place_county_xwalk.dta")) %>%
rename(STATEFP = statefp, PLACEFP = placefp, COUNTYFP_xwalk = countyfp) %>%
select(STATEFP, PLACEFP, COUNTYFP_xwalk)
WRLURI <- read_stata(paste0(RAWDATA,"/other/WHARTONLANDREGULATIONDATA_1_15_2020/WRLURI_01_15_2020.dta")) %>%
filter(str_length(GEOID)==7) %>% # Keeping only census designated places
mutate(PLACEFP = fipsplacecode18, STATEFP = statecode) %>%
select(PLACEFP, STATEFP,LPPI18,SPII18,LPAI18,LZAI18,SRI18,DRI18,
EI18,AHI18,ADI18,WRLURI18,weight_full,weight_metro,
totinitiatives18,appr_rate18, communityname18) %>%
mutate(PLACEFP = case_when((PLACEFP == 11390) ~ 11397, # Butte-Silver Bow to Butte-Silver Bow (balance)
(PLACEFP == 60915 ~ 60900), # Princeton to Princeton
TRUE ~ PLACEFP))
corelogic <- read.csv(paste0(CLEANDATA,"/corelogic/censusplace_clogic_chars.csv")) %>%
rename(NAME_corelogic = NAME)
population <- read.csv(paste0(RAWDATA,"/census/nhgis0025_csv/nhgis0025_csv/nhgis0025_ds258_2020_place.csv")) %>%
select(STATEA, PLACEA, U7H001) %>%
rename(STATEFP = STATEA, PLACEFP = PLACEA, population = U7H001)
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
mutate(COUNTYFP = if_else(is.na(COUNTYFP),COUNTYFP_xwalk,COUNTYFP)) %>%
mutate(cty_fips = 1000*STATEFP+COUNTYFP) %>%
select(-COUNTYFP_xwalk) %>%
left_join(county_cz_xwalk, by = 'cty_fips') %>%
rename(cz = czone) %>%
left_join(sample_czs[c('cz','sample_130_czs')], by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(population, by = c('STATEFP','PLACEFP'))
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP'))
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
mutate(COUNTYFP = if_else(is.na(COUNTYFP),COUNTYFP_xwalk,COUNTYFP)) %>%
mutate(cty_fips = 1000*STATEFP+COUNTYFP) %>%
select(-COUNTYFP_xwalk) %>%
left_join(county_cz_xwalk, by = 'cty_fips')
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(fips_place_xwalk, by = c('STATEFP','PLACEFP'))
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP))
cz_place_xwalk <- read_dta(paste0(XWALKS,"cz_place_xwalk.dta"))
cz_place_xwalk <- read_dta(paste0(XWALKS,"/cz_place_xwalk.dta"))
View(cz_place_xwalk)
View(cz_place_xwalk)
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(cz_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
left_join(sample_czs[c('cz','sample_130_czs')], by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(population, by = c('STATEFP','PLACEFP'))
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"), layer = 'munis')
# Also save attributes without shapefile for ease of use
out %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"/other/municipal_shapefile_attributes.dta"))
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"))
crs <- st_crs(munis) # NAD 83
czs <- st_read(paste0(RAWDATA,"/shapefiles/cz1990_shapefile/cz1990.shp")) %>%
st_transform(crs)
maxcity <- read_dta(paste0(INTDATA,"/census/maxcitypop.dta")) %>%
rename(GEOID_max = GEOID) %>%
dplyr::select(c(cz,maxcitypop,totfrac_in_main_city,GEOID_max))
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(GEOID_max = as.numeric(GEOID_max)) %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz)) %>%
mutate(GEOID = if_else(is.na(GEOID), (100000*STATEFP + PLACEFP), GEOID))
df[df$GEOID == df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = FALSE)
df[df$GEOID == df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
filter(yr_ncrp < 1940) %>%
st_write(paste0(CLEANDATA,"/other/other_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
select(-lnd_sq_) %>%
st_write(paste0(CLEANDATA,"/other/all_other_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
select(-lnd_sq_) %>%
filter(yr_ncrp <= 1970 & yr_ncrp >= 1940) %>%
st_write(paste0(CLEANDATA,"/other/other_194070_munis.shp"), append = FALSE)
View(out)
df$GEOID_max[df$GEOID == 4236904]
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"))
out <- places %>%
mutate(STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP),
COUNTYFP = as.numeric(COUNTYFP)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15),
GEOID = as.numeric(GEOID)) %>%
left_join(corelogic, by = 'GEOID')  %>%
mutate(STATEFP = if_else(is.na(STATEFP),floor(GEOID/100000),STATEFP)) %>%
left_join(cz_place_xwalk, by = c('STATEFP','PLACEFP')) %>%
left_join(sample_czs[c('cz','sample_130_czs')], by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(population, by = c('STATEFP','PLACEFP'))
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"), layer = 'munis')
# Also save attributes without shapefile for ease of use
out %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"/other/municipal_shapefile_attributes.dta"))
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"))
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"))
?st_write
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"), append = FALSE)
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile.shp"), layer = 'munis')
out %>%
st_write(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile_v2.shp"), append = FALSE)
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile/municipal_shapefile_v2.shp"))
crs <- st_crs(munis) # NAD 83
czs <- st_read(paste0(RAWDATA,"/shapefiles/cz1990_shapefile/cz1990.shp")) %>%
st_transform(crs)
maxcity <- read_dta(paste0(INTDATA,"/census/maxcitypop.dta")) %>%
rename(GEOID_max = GEOID) %>%
dplyr::select(c(cz,maxcitypop,totfrac_in_main_city,GEOID_max))
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(GEOID_max = as.numeric(GEOID_max)) %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz)) %>%
mutate(GEOID = if_else(is.na(GEOID), (100000*STATEFP + PLACEFP), GEOID))
for (cz in unique(df$cz)){
cz_name <- df$cz_name[df$cz == cz]
path_name <- cz_name %>%
str_replace_all(",","") %>%
str_replace_all("\\.","") %>%
str_replace_all(" ","_") %>%
str_replace_all("-","_") %>%
str_to_lower()
cz_plot <- ggplot() +
geom_sf(data = czs[czs$cz==cz,],fill=alpha("white",0.2)) +
geom_sf(data = df[df$cz==cz,], mapping = aes(fill = Legend)) +
ggtitle(cz_name)
ggsave(paste0(FIGS,"/circled_czs/",path_name,".png"), scale = 4, plot = cz_plot)
}
df[df$GEOID == df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
st_write(paste0(CLEANDATA,"/other/main_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
filter(yr_ncrp < 1940) %>%
st_write(paste0(CLEANDATA,"/other/other_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
select(-lnd_sq_) %>%
st_write(paste0(CLEANDATA,"/other/all_other_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
select(-lnd_sq_) %>%
filter(yr_ncrp <= 1970 & yr_ncrp >= 1940) %>%
st_write(paste0(CLEANDATA,"/other/other_194070_munis.shp"), append = FALSE)
