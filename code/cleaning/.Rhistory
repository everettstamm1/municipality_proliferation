rep(5,2)
paste0(rep(5,2))
library(tidyverse)
install.packges(tidyverse)
install.packges('tidyverse')
install.packages('tidyverse')
library(tidyverse)
str_c(rep(5,2))
?rep
paste0(rep(5,2))
x<-paste0(rep(5,2))
?str_c
x<-paste0(c(rep(5,2)))
paste(x,collapse=TRUE)
paste(x,collapse='')
list <- []
list <- []
n<-5
str <- paste(rep("()",n), collapse='')
cond <- TRUE
list <- [str]
list <- [str]
list <- list(str)
list <- c(str)
for(i in 1:(n-1)){
print(i)
}
substr(str,2,2)
?substr
final <- function(n){
str <- paste(rep("()",n), collapse='')
list <- c(str)
for(i in 2:ncar(str)-2){
len <- 2*n
head <- substr(str,1,i-1)
tail <- substr(str,i+1,len)
swap <- str_c(substr(str,i+1,i+1),substr(str,i,i))
str <- str_c(head,swap,tail)
list <- c(list,str)
}
return(list)
}
final(1)
final <- function(n){
str <- paste(rep("()",n), collapse='')
list <- c(str)
for(i in 2:2*n-2){
len <- 2*n
head <- substr(str,1,i-1)
tail <- substr(str,i+1,len)
swap <- str_c(substr(str,i+1,i+1),substr(str,i,i))
str <- str_c(head,swap,tail)
list <- c(list,str)
}
return(list)
}
final(1)
final(2)
final(3)
for(i in 2:2*n-2){
print(i)
}
for(i in 2:2*n-2){
print(i)
}
for(i in 2:(2*n-2)){
print(i)
}
final <- function(n){
str <- paste(rep("()",n), collapse='')
list <- c(str)
for(i in 2:(2*n-2)){
len <- 2*n
head <- substr(str,1,i-1)
tail <- substr(str,i+1,len)
swap <- str_c(substr(str,i+1,i+1),substr(str,i,i))
str <- str_c(head,swap,tail)
list <- c(list,str)
}
return(list)
}
final(1)
final(2)
len <- 2*n
head <- substr(str,1,i-1)
i <-2
len <- 2*n
head <- substr(str,1,i-1)
tail <- substr(str,i+1,len)
i <-2
len <- 2*n
head <- substr(str,1,i-1)
tail <- substr(str,i+2,len)
swap <- str_c(substr(str,i+1,i+1),substr(str,i,i))
str <- str_c(head,swap,tail)
final <- function(n){
str <- paste(rep("()",n), collapse='')
list <- c(str)
for(i in 2:(2*n-2)){
len <- 2*n
head <- substr(str,1,i-1)
tail <- substr(str,i+2,len)
swap <- str_c(substr(str,i+1,i+1),substr(str,i,i))
str <- str_c(head,swap,tail)
list <- c(list,str)
}
return(list)
}
final(1)
final(2)
final(3)
final(4)
final(5)
for(i in chars){
print(i)
}
chars <- ['(',')']
chars <- ['\(','\)']
chars <-c('(',')')
for(i in chars){
print(i)
}
m <- rep(chars)
m <- rep(chars,5)
m <- cbind(chars,rep(chars,4))
m <- cbind(data.frame(),rep(chars,4))
chars <-data.frame('(',')')
chars <-data.frame(c('(',')'))
m <- cbind(chars,rep(chars,4))
?apply
apply(m,'+')
apply(m,MARGIN = 1,'+')
apply(m,MARGIN = 1,str_c)
View(m)
apply(m,MARGIN = 2,str_c)
x <- lapply(5,function(x) c('(',')'))
expand.grid(x)
x
expand.grid(rep(c('(',')'),5))
permutations <- function(n){
if(n==1){
return(matrix(1))
} else {
sp <- permutations(n-1)
p <- nrow(sp)
A <- matrix(nrow=n*p,ncol=n)
for(i in 1:n){
A[(i-1)*p+1:p,] <- cbind(i,sp+(sp>=i))
}
return(A)
}
}
permutations(5)
permutations(2)
permutations(3)
permutations(4)
library(nycflights13)
install.packages('nycflights13')
library(nycflights13)
flights
install.packages('stargazer')
?nycflights13
nycflights13
View(weather)
View(flights)
len(unique(weather$origin))
length(unique(weather$origin))
table(weather$origin)
length(unique(weather$origin,weather$year))
length(unique(c(weather$origin,weather$year)))
length(unique(c(weather$origin,weather$year,weather$month)))
length(unique(c(weather$origin,weather$year,weather$month,weather$day)))
length(unique(c(weather$origin,weather$year,weather$month,weather$day,weather$hour)))
length(unique(weather))
library(tidyverse)
temps <- weather %>%
group_by(origin,year,month,day,hour) %>%
summarise(avg_precip = mean(precip))
View(temps)
table(temps$avg_precip)
library(tidyverse)
library(nycflights13)
View(weather)
temps <- weather %>%
group_by(origin,year,month,day,hour) %>%
summarise(avg_precip = mean(precip))
View(temps)
temps <- weather %>%
group_by(origin,year,month,day,hour) %>%
summarise(avg_precip = mean(precip, na.rm = T))
flights_temps <- flights %>%
left_join(temps,
by = c('origin','year','month','day','hour'))
View(flights_temps)
colnames(flights_temps)
force(airlines)
force(airports)
force(planes)
View(airlines)
View(flights)
View(airports)
View(flights)
View(airports)
View(airports)
View(planes)
View(weather)
View(flights)
colnames(flights)
View(flights)
install.packages('rvest')
library(tidyverse)
library(rvest)
url_faculty <- 'https://www.bu.edu/econ/people/faculty/'
# Extract
webc <- rvest::read_html(url_faculty)
View(webc)
xml_child(webc, 1)
xml_attrs(webc)
webc
webc[1]
webc[2]
webc$node
webc$cod
webc[[1]]
faculty_list <- webc %>%
html_elements("li.profile-item")
View(faculty_list)
faculty_list[[1]]
library(tidyverse)
library(rvest)
url_faculty <- 'https://www.bu.edu/econ/people/faculty/'
# Extract html
webc <- rvest::read_html(url_faculty)
# Extract list
faculty_list <- webc %>%
html_elements("li.profile-item")
# Empty data frame
BU_faculty_df <- data.frame()
# Loop to extract name, position, website
for(i in 1:length(faclist)){
name <- faclist[i] %>% html_elements('h6.profile-name') %>% html_text
position <- faclist[i] %>% html_elements('p.profile-title') %>% html_text
website <- faclist[i] %>% html_elements('a.profile-link') %>% html_attr(name='href')
stopifnot(length(name)==1 & length(position)==1 & length(website)==1)
row <- cbind(name,position,website)
BU_faculty_df[i] <- row
}
# Extract list
faclist <- webc %>%
html_elements("li.profile-item")
# Empty data frame
BU_faculty_df <- data.frame()
# Loop to extract name, position, website
for(i in 1:length(faclist)){
name <- faclist[i] %>% html_elements('h6.profile-name') %>% html_text
position <- faclist[i] %>% html_elements('p.profile-title') %>% html_text
website <- faclist[i] %>% html_elements('a.profile-link') %>% html_attr(name='href')
stopifnot(length(name)==1 & length(position)==1 & length(website)==1)
row <- cbind(name,position,website)
BU_faculty_df[i] <- row
}
# Vector
name <- faclist %>% html_element('h6.profile-name') %>% html_text
position <- faclist %>% html_element('p.profile-title') %>% html_text
website <- faclist %>% html_element('a.profile-link') %>% html_attr(name='href')
BU_faculty_df <- data.frame(name,position,website)
View(BU_faculty_df)
temp_web <- read_html(website)
website[1]
# Reading fields
for(i in 1:length(website)){
temp_web <- read_html(website[i])
field <- temp_web %>% html_elements('b') %>% html_text
# If multiple rows are extracted, take the element with "fields" in the text
#field <- field[grepl("Fields")]
BU_faculty_df$fields[i] <- field
}
# Reading fields
for(i in 1:length(website)){
temp_web <- read_html(website[i])
field <- temp_web %>% html_elements('b') %>% html_text
# If multiple rows are extracted, take the element with "fields" in the text
#field <- field[grepl("Fields")]
BU_faculty_df$fields[i] <- field
}
View(BU_faculty_df)
website[2]
# Reading fields
for(i in 1:length(website)){
temp_web <- read_html(website[i])
field <- temp_web %>% html_elements('b') %>% html_text
# If multiple rows are extracted, take the element with "fields" in the text
field <- field[grepl("Fields",field,fixed = TRUE)==TRUE]
field <- sub("Fields: ",'',field)
stopifnot(length(field)<=1)
if(length(field)==0){
field <- ""
}
BU_faculty_df$fields[i] <- field
}
install.packages('jsonlite')
library(jsonlite)
url <-"https://nominatim.openstreetmap.org/search?q=270+Bay+State+
Rd+Boston+MA&format=json"
out <- fromJSON(url)
url <-"https://nominatim.openstreetmap.org/search?q=270+Bay+State+Rd+Boston+MA&format=json"
out <- fromJSON(url)
View(out)
View(out)
install.packages('tidycensus')
library(tidycensus)
census_api_key("7345c79e7ae2c2bb2c6f7f491f16fe2298fa31bc", install = TRUE)
readRenviron("~/.Renviron")
getwd()
## Load dependencies, install if not already.
packages <-
c('tidyverse',
'sf',
'haven',
'tigris',
'stringr',
'readxl',
'terra')
for (pkg in packages) {
if (require(pkg, character.only = TRUE) == FALSE) {
print(paste0("Trying to install ", pkg))
install.packages(pkg)
if (require(pkg, character.only = TRUE)) {
print(paste0(pkg, " installed and loaded"))
} else{
stop(paste0("could not install ", pkg))
}
}
}
# Get paths
paths <- read.csv("../../paths.csv")
getwd()
setwd("C:\Users\edog9\Documents\GitHub\municipality_proliferation\code\cleaning")
setwd("\Users\edog9\Documents\GitHub\municipality_proliferation\code\cleaning")
setwd("C:/Users/edog9/Documents/GitHub/municipality_proliferation/code/cleaning")
# Get paths
paths <- read.csv("../../paths.csv")
RAWDATA <- paths[paths$global == "RAWDATA",2]
INTDATA <- paths[paths$global == "INTDATA",2]
CLEANDATA <- paths[paths$global == "CLEANDATA",2]
FIGS <- paths[paths$global == "FIGS",2]
XWALKS <- paths[paths$global == "XWALKS",2]
munis <- st_read(paste0(CLEANDATA,"/other/municipal_shapefile/munis.shp"))
crs <- st_crs(munis) # NAD 83
czs <- st_read(paste0(RAWDATA,"/shapefiles/cz1990_shapefile/cz1990.shp")) %>%
st_transform(crs)
maxcity <- read_dta(paste0(INTDATA,"/census/maxcitypop.dta")) %>%
rename(GEOID_max = GEOID) %>%
dplyr::select(c(cz,maxcitypop,totfrac_in_main_city,GEOID_max))
df <- munis %>%
inner_join(maxcity, by = 'cz') %>%
mutate(GEOID_max = as.numeric(GEOID_max)) %>%
mutate(Legend =  case_when((GEOID == GEOID_max) ~ "Principal City", # Butte-Silver Bow to Butte-Silver Bow (balance)
(yr_ncrp <= 1940 ~ "Incorporated Pre-1940"), # Princeton to Princeton
TRUE ~ "Incorporated Post-1940 or Unincorporated")) %>%
filter(!is.na(cz))
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
select(-lnd_sq_) %>%
filter(yr_ncrp <= 1970) %>%
st_write(paste0(CLEANDATA,"/other/other_1970_munis.shp"), append = FALSE)
df[df$GEOID != df$GEOID_max,] %>%
st_cast(to = 'MULTILINESTRING') %>%
select(-lnd_sq_) %>%
filter(yr_ncrp <= 1970 & yr_ncrp > 1940) %>%
st_write(paste0(CLEANDATA,"/other/other_194070_munis.shp"), append = FALSE)
