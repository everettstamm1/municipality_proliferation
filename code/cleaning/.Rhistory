#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"cog_ID_fips_place_xwalk_02.dta")) %>%
select(fips_state, fips_county_2002, fips_place_2002) %>%
rename(STATEFP = fips_state, COUNTYFP = fips_county_2002, PLACEFP = fips_place_2002)
library(tidyverse)
library(sf)
library(haven)
library(tigris)
library(stringr)
library(readxl)
library(terra)
RAWDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/raw/"
INTDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/interim/"
CLEANDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/clean/"
XWALKS <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/xwalks/"
#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"cog_ID_fips_place_xwalk_02.dta")) %>%
select(fips_state, fips_county_2002, fips_place_2002) %>%
rename(STATEFP = fips_state, COUNTYFP = fips_county_2002, PLACEFP = fips_place_2002)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
WRLURI <- read_stata(paste0(RAWDATA,"other/WHARTONLANDREGULATIONDATA_1_15_2020/WRLURI_01_15_2020.dta")) %>%
filter(str_length(GEOID)==7) %>% # Keeping only census designated places
mutate(PLACEFP = fipsplacecode18, STATEFP = statecode) %>%
select(PLACEFP, STATEFP,LPPI18,SPII18,LPAI18,LZAI18,SRI18,DRI18,
EI18,AHI18,ADI18,WRLURI18,weight_full,weight_metro,
totinitiatives18,appr_rate18, communityname18) %>%
mutate(PLACEFP = case_when((PLACEFP == 11390) ~ 11397, # Butte-Silver Bow to Butte-Silver Bow (balance)
(PLACEFP == 60915 ~ 60900), # Princeton to Princeton
TRUE ~ PLACEFP))
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s) %>%
merge(munis, by = c('STATEFP', 'PLACEFP'), all.x = TRUE)
places <- rbind(places,place_s)
}
places <- places %>%
mutate(cty_fips = as.numeric(str_c(STATEFP,COUNTYFP)),
STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP)) %>%
merge(county_cz_xwalk, by = 'cty_fips', all.x = TRUE) %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000)
st_write(places,paste0(CLEANDATA,"other/municipal_shapefile.shp"), layer = "munis")
test <- places %>%
st_drop_geometry() %>%
select(cty_fips,PLACEFP,STATEFP,NAME,muniname, yr_incorp,LSAD) %>%
full_join(WRLURI, by = c('STATEFP','PLACEFP')) %>%
mutate(merge = if_else(!is.na(LSAD),
if_else(!is.na(WRLURI18),
3,1),2))
View(places)
table(test$merge, is.na(test$yr_incorp))
table(is.na(munis$yr_incorp))
# TROUBLESHOOTING THE MERGE
test <- places %>%
st_drop_geometry() %>%
select(cty_fips,PLACEFP,STATEFP,NAME,muniname, yr_incorp,LSAD,cz) %>%
full_join(WRLURI, by = c('STATEFP','PLACEFP')) %>%
mutate(merge = if_else(!is.na(LSAD),
if_else(!is.na(WRLURI18),
3,1),2))
table(test$merge, is.na(test$cz))
table(is.na(munis$cz))
table(is.na(munis$muniname))
table(test$merge, is.na(test$muniname))
test[(test$merge==3) & is.na(test$muniname),]
table(is.na(test$WRLURI18))
st_write(places,paste0(CLEANDATA,"other/municipal_shapefile.shp"), layer = "munis")
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
table(places$muniname %>% is.na())
check <- places %>% st_drop_geometry()
View(check)
?places()
check <- check %>% mutate(muni = !is.na(muniname))
table(check$CLASSFP,check$muni)
check <- check %>% mutate(wharton = !is.na(communityname18))
table(check$CLASSFP,check$wharton)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta'))
table(places$GEOID, munis$GEOID)
View(munis)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
x <- str_c(munis$STATEFP,munis$PLACEFP)
head(x)
x <- as.numeric(str_c(munis$STATEFP,munis$PLACEFP))
y <- as.numeric(str_c(places$STATEFP,places$PLACEFP))
View(places)
y <- (str_c(places$STATEFP,places$PLACEFP))
x <- (str_c(munis$STATEFP,munis$PLACEFP))
x <- as.numeric(str_c(munis$STATEFP,munis$PLACEFP))
y <- as.numeric(places$GEOID)
summary(str_length(y))
summary(str_length(x))
x %in% y
table(x %in% y)
RAWDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/raw/"
INTDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/interim/"
CLEANDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/clean/"
XWALKS <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/xwalks/"
#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"cog_ID_fips_place_xwalk_02.dta")) %>%
select(fips_state, fips_county_2002, fips_place_2002) %>%
rename(STATEFP = fips_state, COUNTYFP = fips_county_2002, PLACEFP = fips_place_2002)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
WRLURI <- read_stata(paste0(RAWDATA,"other/WHARTONLANDREGULATIONDATA_1_15_2020/WRLURI_01_15_2020.dta")) %>%
filter(str_length(GEOID)==7) %>% # Keeping only census designated places
mutate(PLACEFP = fipsplacecode18, STATEFP = statecode) %>%
select(PLACEFP, STATEFP,LPPI18,SPII18,LPAI18,LZAI18,SRI18,DRI18,
EI18,AHI18,ADI18,WRLURI18,weight_full,weight_metro,
totinitiatives18,appr_rate18, communityname18) %>%
mutate(PLACEFP = case_when((PLACEFP == 11390) ~ 11397, # Butte-Silver Bow to Butte-Silver Bow (balance)
(PLACEFP == 60915 ~ 60900), # Princeton to Princeton
TRUE ~ PLACEFP))
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2002) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2011) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
places <- places %>%
mutate(cty_fips = as.numeric(str_c(STATEFP,COUNTYFP)),
STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP)) %>%
merge(county_cz_xwalk, by = 'cty_fips', all.x = TRUE) %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000)
table(places$muniname %>% is.na())
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2018) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
places <- places %>%
mutate(cty_fips = as.numeric(str_c(STATEFP,COUNTYFP)),
STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP)) %>%
merge(county_cz_xwalk, by = 'cty_fips', all.x = TRUE) %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000)
table(places$muniname %>% is.na())
st_write(places,paste0(CLEANDATA,"other/municipal_shapefile.shp"), layer = "munis")
y <- as.numeric(places$GEOID)
x <- as.numeric(str_c(munis$STATEFP,munis$PLACEFP))
table(x %in% y)
?write_dta
library(tidyverse)
library(sf)
library(haven)
library(tigris)
library(stringr)
library(readxl)
library(terra)
RAWDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/raw/"
INTDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/interim/"
CLEANDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/clean/"
XWALKS <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/xwalks/"
#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"cog_ID_fips_place_xwalk_02.dta")) %>%
select(fips_state, fips_county_2002, fips_place_2002) %>%
rename(STATEFP = fips_state, COUNTYFP = fips_county_2002, PLACEFP = fips_place_2002)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
WRLURI <- read_stata(paste0(RAWDATA,"other/WHARTONLANDREGULATIONDATA_1_15_2020/WRLURI_01_15_2020.dta")) %>%
filter(str_length(GEOID)==7) %>% # Keeping only census designated places
mutate(PLACEFP = fipsplacecode18, STATEFP = statecode) %>%
select(PLACEFP, STATEFP,LPPI18,SPII18,LPAI18,LZAI18,SRI18,DRI18,
EI18,AHI18,ADI18,WRLURI18,weight_full,weight_metro,
totinitiatives18,appr_rate18, communityname18) %>%
mutate(PLACEFP = case_when((PLACEFP == 11390) ~ 11397, # Butte-Silver Bow to Butte-Silver Bow (balance)
(PLACEFP == 60915 ~ 60900), # Princeton to Princeton
TRUE ~ PLACEFP))
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2018) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
places <- places %>%
mutate(cty_fips = as.numeric(str_c(STATEFP,COUNTYFP)),
STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP)) %>%
merge(county_cz_xwalk, by = 'cty_fips', all.x = TRUE) %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000)
st_write(places,paste0(CLEANDATA,"other/municipal_shapefile.shp"), layer = "munis")
# Also save attributes without shapefile for ease of use
places %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"municipal_shapefile_attributes.dta"), version = 17)
# Also save attributes without shapefile for ease of use
places %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"municipal_shapefile_attributes.dta"))
# Also save attributes without shapefile for ease of use
places %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"other/municipal_shapefile_attributes.dta"))
library(tidyverse)
library(sf)
library(haven)
library(tigris)
library(stringr)
library(readxl)
library(terra)
RAWDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/raw/"
INTDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/interim/"
CLEANDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/clean/"
XWALKS <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/xwalks/"
#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"cog_ID_fips_place_xwalk_02.dta")) %>%
select(fips_state, fips_county_2002, fips_place_2002) %>%
rename(STATEFP = fips_state, COUNTYFP = fips_county_2002, PLACEFP = fips_place_2002)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
WRLURI <- read_stata(paste0(RAWDATA,"other/WHARTONLANDREGULATIONDATA_1_15_2020/WRLURI_01_15_2020.dta")) %>%
filter(str_length(GEOID)==7) %>% # Keeping only census designated places
mutate(PLACEFP = fipsplacecode18, STATEFP = statecode) %>%
select(PLACEFP, STATEFP,LPPI18,SPII18,LPAI18,LZAI18,SRI18,DRI18,
EI18,AHI18,ADI18,WRLURI18,weight_full,weight_metro,
totinitiatives18,appr_rate18, communityname18) %>%
mutate(PLACEFP = case_when((PLACEFP == 11390) ~ 11397, # Butte-Silver Bow to Butte-Silver Bow (balance)
(PLACEFP == 60915 ~ 60900), # Princeton to Princeton
TRUE ~ PLACEFP))
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2018) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
places <- places %>%
mutate(cty_fips = as.numeric(str_c(STATEFP,COUNTYFP)),
STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP)) %>%
merge(county_cz_xwalk, by = 'cty_fips', all.x = TRUE) %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000)
st_write(places,paste0(CLEANDATA,"other/municipal_shapefile.shp"), layer = "munis")
# Also save attributes without shapefile for ease of use
places %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"other/municipal_shapefile_attributes.dta"))
table(fips_place_xwalk$STATEFP)
View(places)
table(places$STATEFP)
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2018) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
library(tidyverse)
library(sf)
library(haven)
library(tigris)
library(stringr)
library(readxl)
library(terra)
RAWDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/raw/"
INTDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/interim/"
CLEANDATA <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/clean/"
XWALKS <- "C:/Users/Everett Stamm/Dropbox/municipality_proliferation/data/xwalks/"
#### Geographies ----
county_cz_xwalk <- read_dta(paste0(XWALKS,"cw_cty_czone.dta"))
sample_czs <- read_dta(paste0(INTDATA,"dcourt/original_130_czs.dta")) %>%
mutate(sample_130_czs = TRUE)
fips_place_xwalk <- read_dta(paste0(XWALKS,"cog_ID_fips_place_xwalk_02.dta")) %>%
select(fips_state, fips_county_2002, fips_place_2002) %>%
rename(STATEFP = fips_state, COUNTYFP = fips_county_2002, PLACEFP = fips_place_2002)
munis <- read_stata(paste0(RAWDATA,'/cbgoodman/muni_incorporation_date.dta')) %>%
select(muniname,statefips,placefips,countyfips,yr_incorp) %>%
rename(STATEFP = statefips, PLACEFP = placefips, COUNTYFP = countyfips)
WRLURI <- read_stata(paste0(RAWDATA,"other/WHARTONLANDREGULATIONDATA_1_15_2020/WRLURI_01_15_2020.dta")) %>%
filter(str_length(GEOID)==7) %>% # Keeping only census designated places
mutate(PLACEFP = fipsplacecode18, STATEFP = statecode) %>%
select(PLACEFP, STATEFP,LPPI18,SPII18,LPAI18,LZAI18,SRI18,DRI18,
EI18,AHI18,ADI18,WRLURI18,weight_full,weight_metro,
totinitiatives18,appr_rate18, communityname18) %>%
mutate(PLACEFP = case_when((PLACEFP == 11390) ~ 11397, # Butte-Silver Bow to Butte-Silver Bow (balance)
(PLACEFP == 60915 ~ 60900), # Princeton to Princeton
TRUE ~ PLACEFP))
places <- data.frame()
for(s in unique(munis$STATEFP)){
place_s <- places(state = s, year = 2018) %>%
left_join(munis, by = c('STATEFP', 'PLACEFP'))
places <- rbind(places,place_s)
}
places <- places %>%
mutate(cty_fips = as.numeric(str_c(STATEFP,COUNTYFP)),
STATEFP = as.numeric(STATEFP),
PLACEFP = as.numeric(PLACEFP)) %>%
merge(county_cz_xwalk, by = 'cty_fips', all.x = TRUE) %>%
rename(cz = czone) %>%
left_join(sample_czs, by = 'cz') %>%
mutate(sample_130_czs = if_else(is.na(sample_130_czs),  FALSE, TRUE)) %>%
left_join(WRLURI, by = c('STATEFP', 'PLACEFP')) %>%
mutate(ALAND = ALAND/1000,AWATER = AWATER/1000,
south = STATEFP %in% c(01,05,12,13,21,22,28,37,40,45,47,48,51,54),
ak_hi = STATEFP %in% c(2,15))
st_write(places,paste0(CLEANDATA,"other/municipal_shapefile.shp"), layer = "munis")
# Also save attributes without shapefile for ease of use
places %>%
st_drop_geometry() %>%
write_dta(paste0(CLEANDATA,"other/municipal_shapefile_attributes.dta"))
table(places$south, useNA = 'always')
table(places$STATEFP[places$south==1], useNA = 'always')
